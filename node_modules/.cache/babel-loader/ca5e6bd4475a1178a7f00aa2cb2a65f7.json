{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luciano Rossi\\\\ecommercecda\\\\src\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\nconst CartProvider = props => {\n  _s();\n\n  const [cart, setCart] = useState(() => {\n    const localData = localStorage.getItem('items');\n    return localData ? JSON.parse(localData) : [];\n  });\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalUnidades, setTotalUnidades] = useState(0); //console.log(props.children);\n\n  const addToCart = (item, cantidad) => {\n    if (isInCart(item.id)) {\n      sumarCantidad(item, cantidad);\n    } else {\n      setCart([...cart, { ...item,\n        cantidad\n      }]);\n    }\n  };\n\n  const isInCart = id => {\n    return cart.some(prod => prod.id === id);\n  };\n\n  const sumarCantidad = (item, cantidad) => {\n    const productsUpdate = cart.map(prod => {\n      if (prod.id === item.id) {\n        const newProduct = { ...prod,\n          cantidad: prod.cantidad + cantidad\n        };\n        return newProduct;\n      } else {\n        return prod;\n      }\n    });\n    setCart(productsUpdate);\n  };\n\n  const deleteOne = id => {\n    const productosFiltrados = cart.filter(prod => prod.id !== id);\n    setCart(productosFiltrados);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    localStorage.removeItem('items');\n  };\n\n  const total = () => {\n    /* return cart.reduce((acc, prod) => acc + prod.price * prod.cantidad, 0); */\n    const copia = [...cart];\n    let count = 0;\n    copia.forEach(prod => {\n      count = count + prod.price * prod.cantidad;\n    });\n    return setTotalPrice(count);\n  };\n\n  const unidades = () => {\n    /* return cart.reduce((acc, prod) => acc + prod.price * prod.cantidad, 0); */\n    const copia = [...cart];\n    let count = 0;\n    copia.forEach(prod => {\n      count = count + prod.cantidad;\n    });\n    return setTotalUnidades(count);\n  };\n\n  const aumentar = item => {\n    const cartUpdate = cart.map(prod => prod.id === item.id ? { ...prod,\n      cantidad: prod.cantidad + 1\n    } : prod);\n    setCart(cartUpdate);\n  };\n\n  const disminuir = item => {\n    const cartUpdate = cart.map(prod => prod.id === item.id ? { ...prod,\n      cantidad: prod.cantidad - 1\n    } : prod);\n    setCart(cartUpdate);\n  };\n\n  useEffect(() => {\n    total();\n    unidades();\n    localStorage.setItem('items', JSON.stringify(cart)); // eslint-disable-next-line\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      totalPrice,\n      totalUnidades,\n      addToCart,\n      clearCart,\n      deleteOne,\n      total,\n      disminuir,\n      aumentar\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"NUvHU4QKWIW50qxTMMeNTdspJH4=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","CartContext","CartProvider","props","cart","setCart","localData","localStorage","getItem","JSON","parse","totalPrice","setTotalPrice","totalUnidades","setTotalUnidades","addToCart","item","cantidad","isInCart","id","sumarCantidad","some","prod","productsUpdate","map","newProduct","deleteOne","productosFiltrados","filter","clearCart","removeItem","total","copia","count","forEach","price","unidades","aumentar","cartUpdate","disminuir","setItem","stringify","children"],"sources":["C:/Users/Luciano Rossi/ecommercecda/src/context/CartContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst CartProvider = (props) => {\r\n    const [cart, setCart] = useState(() => {\r\n        const localData = localStorage.getItem('items');\r\n        return localData ? JSON.parse(localData) : [];\r\n    });\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalUnidades, setTotalUnidades] = useState(0);\r\n    //console.log(props.children);\r\n\r\n    const addToCart = (item, cantidad) => {\r\n        if (isInCart(item.id)) {\r\n            sumarCantidad(item, cantidad);\r\n        } else {\r\n            setCart([...cart, { ...item, cantidad }]);\r\n        }\r\n    };\r\n\r\n    const isInCart = (id) => {\r\n        return cart.some((prod) => prod.id === id);\r\n    };\r\n\r\n    const sumarCantidad = (item, cantidad) => {\r\n        const productsUpdate = cart.map((prod) => {\r\n            if (prod.id === item.id) {\r\n                const newProduct = {\r\n                    ...prod,\r\n                    cantidad: prod.cantidad + cantidad,\r\n                };\r\n                return newProduct;\r\n            } else {\r\n                return prod;\r\n            }\r\n        });\r\n        setCart(productsUpdate);\r\n    };\r\n\r\n    const deleteOne = (id) => {\r\n        const productosFiltrados = cart.filter((prod) => prod.id !== id);\r\n        setCart(productosFiltrados);\r\n    };\r\n\r\n    const clearCart = () => {\r\n        setCart([]);\r\n        localStorage.removeItem('items');\r\n    };\r\n\r\n    const total = () => {\r\n        /* return cart.reduce((acc, prod) => acc + prod.price * prod.cantidad, 0); */\r\n        const copia = [...cart];\r\n        let count = 0;\r\n        copia.forEach((prod) => {\r\n            count = count + prod.price * prod.cantidad;\r\n        });\r\n        return setTotalPrice(count);\r\n    };\r\n\r\n    const unidades = () => {\r\n        /* return cart.reduce((acc, prod) => acc + prod.price * prod.cantidad, 0); */\r\n        const copia = [...cart];\r\n        let count = 0;\r\n        copia.forEach((prod) => {\r\n            count = count + prod.cantidad;\r\n        });\r\n        return setTotalUnidades(count);\r\n    };\r\n\r\n    const aumentar = (item) => {\r\n        const cartUpdate = cart.map((prod) =>\r\n            prod.id === item.id\r\n                ? { ...prod, cantidad: prod.cantidad + 1 }\r\n                : prod\r\n        );\r\n\r\n        setCart(cartUpdate);\r\n    };\r\n\r\n    const disminuir = (item) => {\r\n        const cartUpdate = cart.map((prod) =>\r\n            prod.id === item.id\r\n                ? { ...prod, cantidad: prod.cantidad - 1 }\r\n                : prod\r\n        );\r\n\r\n        setCart(cartUpdate);\r\n    };\r\n\r\n    useEffect(() => {\r\n        total();\r\n        unidades();\r\n        localStorage.setItem('items', JSON.stringify(cart));\r\n        // eslint-disable-next-line\r\n    }, [cart]);\r\n\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cart,\r\n                totalPrice,\r\n                totalUnidades,\r\n                addToCart,\r\n                clearCart,\r\n                deleteOne,\r\n                total,\r\n                disminuir,\r\n                aumentar,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}